//Сортировка Выбором
#include <stdio.h>
#define N 6
int min(int A[], int i, int r, int *cmp);
void selectSort(int A[], int n, int *cmp, int *exch);
void show(int A[], int n);

int main()
{
	int A[N] = { 3, 5, 2, 78, 8, 35 };
	int cmp, exch;
	show(A, N);
	selectSort(A, N, &cmp, &exch);
	show(A, N);
	printf("cmp = %d exch = %d\n", cmp, exch);
	return 0;
}
// Сама сортировка использую функцию нахождения минимального элемента.
void selectSort(int A[], int n, int* cmp, int* exch)
{
	int i;
	int tmp;
	int pos;
	*cmp = 0;
	*exch = 0;
	for (i = 0; i < n - 1; i++)
	{
		pos = min(A, i, n - 1, cmp);
		if (pos != i)// Необязательный IF, для тех элементов, которые оказались на своих местах
		{
			*exch += 1;
			tmp = A[i];
			A[i] = A[pos];
			A[pos] = tmp;
		}
	}

}
// Находим минимальный элемент в массиве и возвращаем его индекс-позицию.
int min(int A[], int l, int r, int *cmp)
{
	int i;
	int pos;
	pos = l;
	//*cmp = 0;
	for (i = l + 1; i <= r; i++)
	{
		*cmp += 1;
		if (A[i] < A[pos])
		{
			pos = i;
		}
	}
	return pos;
}
void show(int A[], int n)
{
	int i;
	for (i = 0; i < n; i++)
	{
		printf("%d ", A[i]);
	}
	printf("\n");
}
